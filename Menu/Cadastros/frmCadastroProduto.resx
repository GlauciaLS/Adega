<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>